-- Table: public.pg_authority

-- DROP TABLE IF EXISTS public.pg_authority;

CREATE TABLE IF NOT EXISTS public.pg_authority
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    authority character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pg_authority_pkey PRIMARY KEY (id),
    CONSTRAINT uk_9s9b9il1duiuptjsie5ug4q9h UNIQUE (authority)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.pg_authority
    OWNER to postgres;


-- Table: public.pg_customer

-- DROP TABLE IF EXISTS public.pg_customer;

CREATE TABLE IF NOT EXISTS public.pg_customer
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status boolean,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pg_customer_pkey PRIMARY KEY (id),
    CONSTRAINT uk_kir2gcqeouxrvnvbmowkcddeu UNIQUE (username)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.pg_customer
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.customer_authority
(
    customer_id integer NOT NULL,
    authority_id integer NOT NULL,
    CONSTRAINT customer_authority_pkey PRIMARY KEY (customer_id, authority_id),
    CONSTRAINT fk7rw0v632ap5ibj8i42x5w3hnn FOREIGN KEY (customer_id)
        REFERENCES public.pg_customer (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkkcebin7opfnmotix4e1i2j51w FOREIGN KEY (authority_id)
        REFERENCES public.pg_authority (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.customer_authority
    OWNER to postgres;

-- Table: public.pg_borrow_book

-- DROP TABLE IF EXISTS public.pg_borrow_book;

CREATE TABLE IF NOT EXISTS public.pg_borrow_book
(
    id integer NOT NULL DEFAULT nextval('pg_borrow_book_1_id_seq'::regclass),
    borrow_date date NOT NULL,
    customer_id integer NOT NULL,
    author_id integer,
    type_id integer,
    first_character character(1) COLLATE pg_catalog."default",
    book_id integer NOT NULL,
    CONSTRAINT fk6y9kycw0qtw389yegkip3bcgm FOREIGN KEY (customer_id)
        REFERENCES public.pg_customer (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
) PARTITION BY RANGE (borrow_date);

ALTER TABLE IF EXISTS public.pg_borrow_book
    OWNER to postgres;
-- Index: index_author_id

-- DROP INDEX IF EXISTS public.index_author_id;

CREATE INDEX IF NOT EXISTS index_author_id
    ON public.pg_borrow_book USING hash
    (author_id)
;
-- Index: index_book_id

-- DROP INDEX IF EXISTS public.index_book_id;

CREATE INDEX IF NOT EXISTS index_book_id
    ON public.pg_borrow_book USING hash
    (book_id)
;
-- Index: index_type

-- DROP INDEX IF EXISTS public.index_type;

CREATE INDEX IF NOT EXISTS index_type
    ON public.pg_borrow_book USING hash
    (type_id)
;

-- Partitions SQL

CREATE TABLE public.month1_1 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-01-01') TO ('2023-01-30');

ALTER TABLE IF EXISTS public.month1_1
    OWNER to postgres;
CREATE TABLE public.month1_10 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-10-01') TO ('2023-10-30');

ALTER TABLE IF EXISTS public.month1_10
    OWNER to postgres;
CREATE TABLE public.month1_11 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-11-01') TO ('2023-11-30');

ALTER TABLE IF EXISTS public.month1_11
    OWNER to postgres;
CREATE TABLE public.month1_12 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-12-01') TO ('2023-12-30');

ALTER TABLE IF EXISTS public.month1_12
    OWNER to postgres;
CREATE TABLE public.month1_13 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2022-12-01') TO ('2022-12-30');

ALTER TABLE IF EXISTS public.month1_13
    OWNER to postgres;
CREATE TABLE public.month1_2 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-02-01') TO ('2023-02-28');

ALTER TABLE IF EXISTS public.month1_2
    OWNER to postgres;
CREATE TABLE public.month1_3 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-03-01') TO ('2023-03-30');

ALTER TABLE IF EXISTS public.month1_3
    OWNER to postgres;
CREATE TABLE public.month1_4 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-04-01') TO ('2023-04-30');

ALTER TABLE IF EXISTS public.month1_4
    OWNER to postgres;
CREATE TABLE public.month1_5 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-05-01') TO ('2023-05-30');

ALTER TABLE IF EXISTS public.month1_5
    OWNER to postgres;
CREATE TABLE public.month1_6 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-06-01') TO ('2023-06-30');

ALTER TABLE IF EXISTS public.month1_6
    OWNER to postgres;
CREATE TABLE public.month1_7 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-07-01') TO ('2023-07-28');

ALTER TABLE IF EXISTS public.month1_7
    OWNER to postgres;
CREATE TABLE public.month1_8 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-08-01') TO ('2023-08-30');

ALTER TABLE IF EXISTS public.month1_8
    OWNER to postgres;
CREATE TABLE public.month1_9 PARTITION OF public.pg_borrow_book
    FOR VALUES FROM ('2023-09-01') TO ('2023-09-30');

ALTER TABLE IF EXISTS public.month1_9
    OWNER to postgres;


-- Table: public.pg_customer_borrow_book

-- DROP TABLE IF EXISTS public.pg_customer_borrow_book;

CREATE TABLE IF NOT EXISTS public.pg_customer_borrow_book
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    book_id integer,
    borrow_id integer,
    CONSTRAINT pg_customer_borrow_book_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.pg_customer_borrow_book
    OWNER to postgres;




